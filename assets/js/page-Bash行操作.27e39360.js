(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{856:function(s,e,a){"use strict";a.r(e);var v=a(1),_=Object(v.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Bash 内置了 Readline 库，具有这个库提供的很多“行操作”功能，比如命令的自动补全，可以大大加快操作速度。")]),s._v(" "),a("p",[s._v("这个库默认采用 Emacs 快捷键，也可以改成 Vi 快捷键。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -o "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("下面的命令可以改回 Emacs 快捷键。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -o emacs\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果想永久性更改编辑模式(Emacs / Vi)，可以将命令写在 "),a("code",[s._v("~/.inputrc")]),s._v(" 文件，这个文件是 Readline 的配置文件。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" editing-mode "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("本章介绍的快捷键都属于 Emacs 模式。Vi 模式的快捷键，读者可以参考 Vi 编辑器的教程。")]),s._v(" "),a("p",[s._v("Bash 默认开启这个库，但是允许关闭。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" --noediting\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面命令中，"),a("code",[s._v("--noediting")]),s._v(" 参数关闭了 Readline 库，启动的 Bash 就不带有行操作功能。")]),s._v(" "),a("h2",{attrs:{id:"光标移动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#光标移动"}},[s._v("#")]),s._v(" 光标移动")]),s._v(" "),a("p",[s._v("Readline 提供快速移动光标的快捷键。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + a")]),s._v(": 移到行首。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + b")]),s._v(": 向行首移动一个字符，与左箭头作用相同。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + e")]),s._v(": 移到行尾。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + f")]),s._v(": 向行尾移动一个字符，与右箭头作用相同。")]),s._v(" "),a("li",[a("code",[s._v("Alt + f")]),s._v(": 移动到当前单词的词尾。")]),s._v(" "),a("li",[a("code",[s._v("Alt + b")]),s._v(": 移动到当前单词的词首。")])]),s._v(" "),a("p",[s._v("上面快捷键的 Alt 键，也可以用 ESC 键代替。")]),s._v(" "),a("h2",{attrs:{id:"清除屏幕"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除屏幕"}},[s._v("#")]),s._v(" 清除屏幕")]),s._v(" "),a("p",[a("code",[s._v("Ctrl + l")]),s._v(" 快捷键可以清除屏幕，即将当前行移到屏幕的第一行，与 "),a("code",[s._v("clear")]),s._v(" 命令作用相同。")]),s._v(" "),a("h2",{attrs:{id:"编辑操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑操作"}},[s._v("#")]),s._v(" 编辑操作")]),s._v(" "),a("p",[s._v("下面的快捷键可以编辑命令行内容。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + d")]),s._v(": 删除光标位置的字符(delete)。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + w")]),s._v(": 删除光标前面的单词。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + t")]),s._v(": 光标位置的字符与它前面一位的字符交换位置(transpose)。")]),s._v(" "),a("li",[a("code",[s._v("Alt + t")]),s._v(": 光标位置的词与它前面一位的词交换位置(transpose)。")]),s._v(" "),a("li",[a("code",[s._v("Alt + l")]),s._v(": 将光标位置至词尾转为小写(lowercase)。")]),s._v(" "),a("li",[a("code",[s._v("Alt + u")]),s._v(": 将光标位置至词尾转为大写(uppercase)。")])]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("Ctrl + d")]),s._v(" 的时候，如果当前行没有任何字符，会导致退出当前 Shell，所以要小心。")]),s._v(" "),a("p",[s._v("剪切和粘贴快捷键如下。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + k")]),s._v(": 剪切光标位置到行尾的文本。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + u")]),s._v(": 剪切光标位置到行首的文本。")]),s._v(" "),a("li",[a("code",[s._v("Alt + d")]),s._v(": 剪切光标位置到词尾的文本。")]),s._v(" "),a("li",[a("code",[s._v("Alt + Backspace")]),s._v(": 剪切光标位置到词首的文本。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + y")]),s._v(": 在光标位置粘贴文本。")])]),s._v(" "),a("p",[s._v("同样地，Alt 键可以用 Esc 键代替。")]),s._v(" "),a("h2",{attrs:{id:"自动补全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动补全"}},[s._v("#")]),s._v(" 自动补全")]),s._v(" "),a("p",[s._v("命令输入到一半的时候，可以按一下 Tab 键，Readline 会自动补全命令或路径。比如，输入 "),a("code",[s._v("cle")]),s._v("，再按下 Tab 键，Bash 会自动将这个命令补全为 "),a("code",[s._v("clear")]),s._v("。")]),s._v(" "),a("p",[s._v("如果符合条件的命令或路径有多个，就需要连续按两次 Tab 键，Bash 会提示所有符合条件的命令或路径。")]),s._v(" "),a("p",[s._v("除了命令或路径，Tab 还可以补全其他值。如果一个值以 "),a("code",[s._v("$")]),s._v(" 开头，则按下 Tab 键会补全变量；如果以 "),a("code",[s._v("~")]),s._v(" 开头，则补全用户名；如果以 "),a("code",[s._v("@")]),s._v(" 开头，则补全主机名(hostname)，主机名以列在 "),a("code",[s._v("/etc/hosts")]),s._v(" 文件里面的主机为准。")]),s._v(" "),a("p",[s._v("自动补全相关的快捷键如下。")]),s._v(" "),a("ul",[a("li",[s._v("Tab: 完成自动补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + ?")]),s._v(": 列出可能的补全，与连按两次 Tab 键作用相同。")]),s._v(" "),a("li",[a("code",[s._v("Alt + /")]),s._v(": 尝试文件路径补全。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + x /")]),s._v(": 先按 "),a("code",[s._v("Ctrl + x")]),s._v("，再按 "),a("code",[s._v("/")]),s._v("，等同于 "),a("code",[s._v("Alt + ?")]),s._v("，列出可能的文件路径补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + !")]),s._v(": 命令补全。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + x !")]),s._v(": 先按 "),a("code",[s._v("Ctrl + x")]),s._v("，再按 "),a("code",[s._v("!")]),s._v("，等同于 "),a("code",[s._v("Alt + !")]),s._v("，命令补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + ~")]),s._v(": 用户名补全。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + x ~")]),s._v(": 先按 "),a("code",[s._v("Ctrl + x")]),s._v("，再按 "),a("code",[s._v("~")]),s._v("，等同于 "),a("code",[s._v("Alt + ~")]),s._v("，用户名补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + $")]),s._v(": 变量名补全。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + x $")]),s._v(": 先按 "),a("code",[s._v("Ctrl + x")]),s._v("，再按 "),a("code",[s._v("$")]),s._v("，等同于 "),a("code",[s._v("Alt + $")]),s._v("，变量名补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + @")]),s._v(": 主机名补全。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + x @")]),s._v(": 先按 "),a("code",[s._v("Ctrl + x")]),s._v("，再按 "),a("code",[s._v("@")]),s._v("，等同于 "),a("code",[s._v("Alt + @")]),s._v("，主机名补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + *")]),s._v(": 在命令行一次性插入所有可能的补全。")]),s._v(" "),a("li",[a("code",[s._v("Alt + Tab")]),s._v(": 尝试用 "),a("code",[s._v(".bash_history")]),s._v(" 里面以前执行命令，进行补全。")])]),s._v(" "),a("p",[s._v("上面的 "),a("code",[s._v("Alt")]),s._v(" 键也可以用 ESC 键代替。")]),s._v(" "),a("h2",{attrs:{id:"操作历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作历史"}},[s._v("#")]),s._v(" 操作历史")]),s._v(" "),a("h3",{attrs:{id:"基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[s._v("#")]),s._v(" 基本用法")]),s._v(" "),a("p",[s._v("Bash 会保留用户的操作历史，即用户输入的每一条命令都会记录。退出当前 Shell 的时候，Bash 会将用户在当前 Shell 的操作历史写入 "),a("code",[s._v("~/.bash_history")]),s._v(" 文件，该文件默认储存 500 个操作。")]),s._v(" "),a("p",[s._v("环境变量 "),a("code",[s._v("HISTFILE")]),s._v(" 总是指向这个文件。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HISTFILE")]),s._v("\n/home/me/.bash_history\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("有了操作历史以后，就可以使用方向键的 "),a("code",[s._v("↑")]),s._v(" 和 "),a("code",[s._v("↓")]),s._v("，快速浏览上一条和下一条命令。")]),s._v(" "),a("p",[s._v("下面的方法可以快速执行以前执行过的命令。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Hello World\nHello World\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye\nGoodbye\n\n$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("e\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye\nGoodbye\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("上面例子中，"),a("code",[s._v("!e")]),s._v(" 表示找出操作历史之中，最近的那一条以 "),a("code",[s._v("e")]),s._v(" 开头的命令并执行。Bash 会先输出那一条命令 "),a("code",[s._v("echo Goodbye")]),s._v("，然后直接执行。")]),s._v(" "),a("p",[s._v("同理，"),a("code",[s._v("!echo")]),s._v(" 也会执行最近一条以 "),a("code",[s._v("echo")]),s._v(" 开头的命令。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("echo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye\nGoodbye\n\n$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("echo H\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye H\nGoodbye H\n\n$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("echo H G\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye H G\nGoodbye H G\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("注意，"),a("code",[s._v("!string")]),s._v(" 语法只会匹配命令，不会匹配参数。所以 "),a("code",[s._v("!echo H")]),s._v(" 不会执行 "),a("code",[s._v("echo Hello World")]),s._v("，而是会执行 "),a("code",[s._v("echo Goodbye")]),s._v("，并把参数 "),a("code",[s._v("H")]),s._v(" 附加在这条命令之后。同理，"),a("code",[s._v("!echo H G")]),s._v(" 也是等同于 "),a("code",[s._v("echo Goodbye")]),s._v(" 命令之后附加 "),a("code",[s._v("H G")]),s._v("。")]),s._v(" "),a("p",[s._v("最后，按下 "),a("code",[s._v("Ctrl + r")]),s._v(" 会显示操作历史，可以用方向键上下移动，选择其中要执行的命令。也可以键入命令的首字母，Shell 就会自动在历史文件中，查询并显示匹配的结果。")]),s._v(" "),a("h3",{attrs:{id:"history-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-命令"}},[s._v("#")]),s._v(" history 命令")]),s._v(" "),a("p",[a("code",[s._v("history")]),s._v(" 命令能显示操作历史，即 "),a("code",[s._v(".bash_history")]),s._v(" 文件的内容。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("498")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Goodbye\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("499")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ~\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("使用该命令，而不是直接读取 "),a("code",[s._v(".bash_history")]),s._v(" 文件的好处是，它会在所有的操作前加上行号，最近的操作在最后面，行号最大。")]),s._v(" "),a("p",[s._v("通过定制环境变量 "),a("code",[s._v("HISTTIMEFORMAT")]),s._v("，可以显示每个操作的时间。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HISTTIMEFORMAT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%F %T  '")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2013")]),s._v("-06-09 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40:12   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/issue\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2013")]),s._v("-06-09 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40:12   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码中，"),a("code",[s._v("%F")]),s._v(" 相当于 "),a("code",[s._v("%Y - %m - %d")]),s._v("，"),a("code",[s._v("%T")]),s._v(" 相当于 "),a("code",[s._v("%H : %M : %S")]),s._v("。")]),s._v(" "),a("p",[s._v("只要设置 "),a("code",[s._v("HISTTIMEFORMAT")]),s._v(" 这个环境变量，就会在 "),a("code",[s._v(".bash_history")]),s._v(" 文件保存命令的执行时间戳。如果不设置，就不会保存时间戳。")]),s._v(" "),a("p",[s._v("如果不希望保存本次操作的历史，可以设置环境变量 "),a("code",[s._v("HISTSIZE")]),s._v(" 等于 0。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果 "),a("code",[s._v("HISTSIZE=0")]),s._v(" 写入用户主目录的 "),a("code",[s._v("~/.bashrc")]),s._v(" 文件，那么就不会保留该用户的操作历史。如果写入 "),a("code",[s._v("/etc/profile")]),s._v("，整个系统都不会保留操作历史。")]),s._v(" "),a("p",[s._v("如果想搜索某个以前执行的命令，可以配合 "),a("code",[s._v("grep")]),s._v(" 命令搜索操作历史。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" /usr/bin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面命令返回 "),a("code",[s._v(".bash_history")]),s._v(" 文件里面，那些包含 "),a("code",[s._v("/usr/bin")]),s._v(" 的命令。")]),s._v(" "),a("p",[s._v("操作历史的每一条记录都有编号。知道了命令的编号以后，可以用 "),a("code",[s._v("感叹号 + 编号")]),s._v(" 执行该命令。如果想要执行 "),a("code",[s._v(".bash_history")]),s._v(" 里面的第 8 条命令，可以像下面这样操作。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("history")]),s._v(" 命令的 "),a("code",[s._v("-c")]),s._v(" 参数可以清除操作历史。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" -c\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"相关快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关快捷键"}},[s._v("#")]),s._v(" 相关快捷键")]),s._v(" "),a("p",[s._v("下面是一些与操作历史相关的快捷键。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + p")]),s._v(": 显示上一个命令，与向上箭头效果相同(previous)。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + n")]),s._v(": 显示下一个命令，与向下箭头效果相同(next)。")]),s._v(" "),a("li",[a("code",[s._v("Alt + <")]),s._v(": 显示第一个命令。")]),s._v(" "),a("li",[a("code",[s._v("Alt + >")]),s._v(": 显示最后一个命令，即当前的命令。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + o")]),s._v(": 执行历史文件里面的当前条目，并自动显示下一条命令。这对重复执行某个序列的命令很有帮助。")])]),s._v(" "),a("p",[s._v("感叹号"),a("code",[s._v("!")]),s._v("的快捷键如下。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("!!")]),s._v(": 执行上一个命令。")]),s._v(" "),a("li",[a("code",[s._v("!n")]),s._v(": 执行历史文件里面行号为 "),a("code",[s._v("n")]),s._v(" 的命令。")]),s._v(" "),a("li",[a("code",[s._v("!-n")]),s._v(": 执行当前命令之前 "),a("code",[s._v("n")]),s._v(" 条的命令。")]),s._v(" "),a("li",[a("code",[s._v("!string")]),s._v(": 执行最近一个以指定字符串 "),a("code",[s._v("string")]),s._v(" 开头的命令。")]),s._v(" "),a("li",[a("code",[s._v("!?string")]),s._v(": 执行最近一条包含字符串 "),a("code",[s._v("string")]),s._v(" 的命令。")]),s._v(" "),a("li",[a("code",[s._v("^string1^string2")]),s._v(": 执行最近一条包含 "),a("code",[s._v("string1")]),s._v(" 的命令，将其替换成 "),a("code",[s._v("string2")]),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"其他快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他快捷键"}},[s._v("#")]),s._v(" 其他快捷键")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + j")]),s._v(": 等同于回车键(LINEFEED)。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + m")]),s._v(": 等同于回车键(CARRIAGE RETURN)。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + o")]),s._v(": 等同于回车键，并展示操作历史的下一个命令。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + v")]),s._v(": 将下一个输入的特殊字符变成字面量，比如回车变成 "),a("code",[s._v("^M")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + [")]),s._v(": 等同于 ESC。")]),s._v(" "),a("li",[a("code",[s._v("Alt + .")]),s._v(": 插入上一个命令的最后一个词。")]),s._v(" "),a("li",[a("code",[s._v("Alt + _")]),s._v(": 等同于 "),a("code",[s._v("Alt + .")]),s._v("。")])]),s._v(" "),a("p",[s._v("上面的 "),a("code",[s._v("Alt + .")]),s._v(" 快捷键，对于很长的文件路径，有时会非常方便。因为 Unix 命令的最后一个参数通常是文件路径。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" foo_bar\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#按下 Alt + .")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面例子中，在 "),a("code",[s._v("cd")]),s._v(" 命令后按下 "),a("code",[s._v("Alt + .")]),s._v("，就会自动插入 "),a("code",[s._v("foo_bar")]),s._v("。")])])}),[],!1,null,null,null);e.default=_.exports}}]);